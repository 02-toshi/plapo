- 要件
 - ブラウザ上で複数人がスプリントプランニングを行うためのwebアプリ

- 主要モジュールとユースケース
 - 部屋
  - 部屋を建てる
  - 部屋を壊す（消す）
 - 参加者
  - 部屋に参加する
  - 部屋から退出する
 - 見積もり内容
  - 見積もりポイント
  - 見積もり者

- 画面イメージ
 - タイトル画面
  - 部屋を建てる
   - DDB上に部屋オブジェクトを新しくinsertする
  - アクティブな部屋一覧を表示する
   - DDB上のテーブルから部屋オブジェクトのリストを取得し、結果を呼び出し元に返す
  - アクティブな部屋に参加する
   - セッション情報をDDBに書き込む
  - 参加する際にニックネームを入力する
   - 参加するときに書き込むセッション情報にニックネームのStringデータを持たせる
 - 部屋画面
  - 見積もりを行う(プランニングポーカーは伏せられた状態で表示する)
   - 見積もり情報をDDBに書き込む
  - 参加者の一覧 + そのうちの誰の見積もりが終わっているかがわかるようにする
   - セッション情報に見積もりDONE / NOT DONEがわかるようなデータ(boolean?)値を持たせる
  - 任意のトリガーに基づいて、伏せられたポーカーがオープンとなり、各メンバーの見積もり一覧がオープンとなる -> これはUIの仕事かな
   - トリガーのイメージ
    - 管理者が強制的にオープンする
    - 参加者全員が見積もりを完了する
  - 現在のバックログの見積もり結果を破棄し、次の見積もりへ進める
   - これはどうやって表現しようかな。DDBの見積もり情報を全てdeleteするか、削除フラグを持たせるか。
     あとあと見積もり履歴が確認できる機能を持たせるなら論理削除にしておきたいところ

 - モジュール設計
  - アクティブな部屋一覧をDDBから取得する
    def get_active_rooms():
  - 新たに部屋を建てるためのid文字列を返す
    def create_new_room():
  - 参加者のセッション情報をdynamoDBに書き込みに行く
    def write_session_info(name: str, dynamodb=None):
  - 各バックログの見積もりを確定してDynamoDBに書き込みに行く
    def write_estimate_result():
  - ブラウザを閉じたらDynamoDBからセッション情報を削除する（気分）
    def delete_session_info():
  - 過去の見積結果のポイントをDynamoDBから削除して履歴をリセットする
    def reset_estimate_history():

 - テーブル設計
  - 概要
   - NoSQLは基本joinさせることができないということで、
     リレーショナルな作りにするというよりはこのテーブルだけで完結するようにする
     問題が出てきたらテーブル分割とか考えよう
  - テーブル
   - plapo
    - カラムとその説明
     - id(PK) : str
      - ランダム文字列32桁くらい？
     - room_id : str
      - 6桁くらいの数値をイメージ
     - member_id : str
      - 10桁くらいの数値をイメージ
     - opened : bool
      - 部屋が利用可能かどうかを表す。利用時にデータ作成して、終わったら明示的に削除するなら、いらないカラムかも。
     - point : int
      - 現在の見積もりポイント memberに紐付けると履歴を持てないけど、とりあえずMVPだけ意識するので現在の見積もりだけ保持できる作りとする
     - nickname : str
      - 参加者の表示用ニックネーム 10桁くらいかなぁ デフォルト値で「匿名」とか入れとく？
     - ttl : int
      - 長くても24Hくらいかな


